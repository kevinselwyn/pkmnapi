name: pkmnapi

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  pkmnapi-api:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pkmnapi-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Secrets
      run: ./decrypt.sh
      working-directory: secrets
      env:
        SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
    - name: Build
      run: cargo build --verbose
      working-directory: pkmnapi-api
    - name: Dependencies
      run: cargo install diesel_cli
      working-directory: pkmnapi-api
    - name: Test
      run: cargo test --verbose -- --test-threads 1
      working-directory: pkmnapi-api
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/pkmnapi-test
        PKMN_ROM: ../secrets/pkmn-ff0000.gb
        PKMN_SAV: ../secrets/data/pkmn.sav
  pkmnapi-db:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Secrets
      run: ./decrypt.sh
      working-directory: secrets
      env:
        SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
    - name: Build
      run: cargo build --verbose
      working-directory: pkmnapi-db
    - name: Test Red
      run: cargo test --features PKMN_RED --verbose
      working-directory: pkmnapi-db
      env:
        PKMN_ROM: ../secrets/pkmn-ff0000.gb
        PKMN_SAV: ../secrets/data/pkmn.sav
    - name: Test Red Ignored
      run: cargo test --features PKMN_RED --verbose -- --ignored
      working-directory: pkmnapi-db
      env:
        PKMN_ROM: ../secrets/pkmn-ff0000.gb
        PKMN_SAV: ../secrets/data/pkmn.sav
    - name: Test Blue
      run: cargo test --features PKMN_BLUE --verbose
      working-directory: pkmnapi-db
      env:
        PKMN_ROM: ../secrets/pkmn-0000ff.gb
        PKMN_SAV: ../secrets/data/pkmn.sav
    - name: Test Blue Ignored
      run: cargo test --features PKMN_BLUE --verbose -- --ignored
      working-directory: pkmnapi-db
      env:
        PKMN_ROM: ../secrets/pkmn-0000ff.gb
        PKMN_SAV: ../secrets/data/pkmn.sav
  pkmnapi-email:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Build
      run: cargo build --verbose
      working-directory: pkmnapi-email
    - name: Test
      run: cargo test --verbose
      working-directory: pkmnapi-email
  pkmnapi-sql:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pkmnapi-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - name: Build
      run: cargo build --verbose
      working-directory: pkmnapi-sql
    - name: Dependencies
      run: cargo install diesel_cli
      working-directory: pkmnapi-sql
    - name: Test
      run: cargo test --verbose -- --test-threads 1
      working-directory: pkmnapi-sql
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/pkmnapi-test
  deploy:
    needs:
    - pkmnapi-api
    - pkmnapi-db
    - pkmnapi-email
    - pkmnapi-sql
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      uses: akhileshns/heroku-deploy@master
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "pkmn-api"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        buildpack: "https://github.com/emk/heroku-buildpack-rust"
  verify:
    needs:
    - deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Verify
      run: |
        [[ `curl -s https://api.pkmnapi.com/status` == "OK" ]]
  site:
    needs:
    - verify
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      uses: shalzz/zola-deploy-action@master
      env:
        PAGES_BRANCH: gh-pages
        BUILD_DIR: site
        TOKEN: ${{ secrets.TOKEN }}
